{"version":3,"sources":["reducers/index.js","store/index.js","actions/index.js","components/ContactForm.js","components/EditContact.js","components/DeleteContact.js","components/ContactCard.js","components/EditContactForm.js","components/ContactList.js","components/OpenFormButton.js","App.js","index.js"],"names":["initialState","contactList","rootReducer","state","action","type","contactExists","some","contact","email","payload","Object","assign","concat","filter","editingContact","newContact","editing","map","date","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","toggleEditContact","connect","addContact","useState","name","firstLine","secondLine","town","county","postcode","phone","setNewContact","handleChange","e","target","value","className","onSubmit","preventDefault","Date","now","onChange","placeholder","required","onClick","deleteContact","ContactCard","updateContact","updatedContact","setUpdatedContact","useEffect","length","index","key","OpenFormButton","setDisplayForm","buttonText","displayForm","prevState","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7ada50c.chunk.js","sourcesContent":["const initialState = {\r\n\tcontactList: []\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'ADD_CONTACT':\r\n\t\t\t//check for existing email already in state\r\n\t\t\tconst contactExists = state.contactList.some(\r\n\t\t\t\t(contact) => contact.email === action.payload.email\r\n\t\t\t);\r\n\t\t\tif (!contactExists) {\r\n\t\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\t\tcontactList: state.contactList.concat(action.payload),\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\treturn state;\r\n\t\t\t}\r\n\t\tcase 'DELETE_CONTACT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcontactList: state.contactList.filter(\r\n\t\t\t\t\t(contact) => contact.email !== action.payload.contact\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\tcase 'TOGGLE_EDIT_CONTACT':\r\n\t\t\tconst { editingContact } = action.payload;\r\n\t\t\tconst newContact = {\r\n\t\t\t\t...editingContact,\r\n\t\t\t\tediting: !editingContact.editing,\r\n\t\t\t};\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tcontactList: state.contactList.map((contact) =>\r\n\t\t\t\t\tcontact.date === editingContact.date ? newContact : contact\r\n\t\t\t\t),\r\n\t\t\t});\r\n\t\tcase 'UPDATE_CONTACT':\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tcontactList: state.contactList.map((contact) =>\r\n\t\t\t\t\tcontact.date === action.payload.date ? action.payload : contact\r\n\t\t\t\t),\r\n\t\t\t});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default rootReducer;\r\n","import { createStore, compose } from 'redux';\r\nimport rootReducer from '../reducers';\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, storeEnhancers());\r\n\r\nexport default store;\r\n","//action creator\r\nexport const selectedAddress = (address) => {\r\n\treturn {\r\n\t\ttype: 'ADDRESS_SELECTED',\r\n\t\tpayload: address,\r\n\t};\r\n};\r\n\r\nexport const addContact = (newContact) => {\r\n\treturn {\r\n\t\ttype: 'ADD_CONTACT',\r\n\t\tpayload: newContact,\r\n\t};\r\n};\r\n\r\nexport const deleteContact = (contact) => {\r\n\treturn {\r\n\t\ttype: 'DELETE_CONTACT',\r\n\t\tpayload: contact,\r\n\t};\r\n};\r\n\r\nexport const toggleEditContact = (editingContact) => {\r\n\treturn {\r\n\t\ttype: 'TOGGLE_EDIT_CONTACT',\r\n\t\tpayload: editingContact,\r\n\t};\r\n};\r\n\r\nexport const updateContact = (updatedContact) => {\r\n\treturn {\r\n\t\ttype: 'UPDATE_CONTACT',\r\n\t\tpayload: updatedContact,\r\n\t};\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../actions';\r\n\r\nfunction ContactForm({ addContact }) {\r\n\tconst [contact, setNewContact] = useState({\r\n\t\tname: '',\r\n\t\tfirstLine: '',\r\n\t\tsecondLine: '',\r\n\t\ttown: '',\r\n\t\tcounty: '',\r\n\t\tpostcode: '',\r\n\t\temail: '',\r\n\t\tphone: '',\r\n\t\tdate: '',\r\n\t});\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tsetNewContact({ ...contact, [name]: value });\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\t//send contact to store\r\n\t\taddContact({ ...contact, date: Date.now(), editing: false });\r\n\t\tsetNewContact({\r\n\t\t\tname: '',\r\n\t\t\tfirstLine: '',\r\n\t\t\tsecondLine: '',\r\n\t\t\ttown: '',\r\n\t\t\tcounty: '',\r\n\t\t\tpostcode: '',\r\n\t\t\temail: '',\r\n\t\t\tphone: '',\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<form onSubmit={handleSubmit} className=\"form\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={contact.name}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\tplaceholder=\"name\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={contact.firstLine}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"firstLine\"\r\n\t\t\t\t\tplaceholder=\"first line\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={contact.secondLine}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"secondLine\"\r\n\t\t\t\t\tplaceholder=\"second line\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={contact.town}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"town\"\r\n\t\t\t\t\tplaceholder=\"town\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={contact.county}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"county\"\r\n\t\t\t\t\tplaceholder=\"county\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={contact.postcode}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"postcode\"\r\n\t\t\t\t\tplaceholder=\"postcode\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={contact.email}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\tplaceholder=\"email\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={contact.phone}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\tplaceholder=\"phone\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button>Add contact</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default connect(null, { addContact })(ContactForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toggleEditContact } from '../actions';\r\n\r\nfunction EditContact({ toggleEditContact, contact }) {\r\n\tfunction handleClick() {\r\n\t\ttoggleEditContact({\r\n\t\t\ttype: 'TOGGLE_EDIT_CONTACT',\r\n\t\t\teditingContact: contact,\r\n\t\t});\r\n\t}\r\n\treturn <button onClick={handleClick}>Edit</button>;\r\n}\r\n\r\nexport default connect(null, { toggleEditContact })(EditContact);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../actions';\r\n\r\nfunction DeleteContact({ deleteContact, contact }) {\r\n\tfunction handleClick() {\r\n\t\tdeleteContact({\r\n\t\t\ttype: 'DELETE_CONTACT',\r\n\t\t\tcontact: contact.email,\r\n\t\t});\r\n\t}\r\n\r\n\treturn <button onClick={handleClick}>Delete</button>;\r\n}\r\n\r\nexport default connect(null, { deleteContact })(DeleteContact);\r\n","import React from 'react';\r\nimport EditContact from './EditContact';\r\nimport DeleteContact from './DeleteContact';\r\n\r\n//destructure props and render\r\nfunction ContactCard({ contact }) {\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<h3>{contact.name}</h3>\r\n\t\t\t<address className=\"card__address_block\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{contact.firstLine}\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t{contact.secondLine}\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t{contact.town}\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t{contact.county}\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t{contact.postcode}\r\n\t\t\t\t\t<br />\r\n\t\t\t\t</p>\r\n\t\t\t</address>\r\n\t\t\t<p>\r\n\t\t\t\t{contact.email}\r\n\t\t\t\t<br />\r\n\t\t\t\t{contact.phone}\r\n\t\t\t</p>\r\n\t\t\t<div className=\"card__button_block\">\r\n\t\t\t\t<EditContact contact={contact} />\r\n\t\t\t\t<DeleteContact contact={contact} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ContactCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateContact, toggleEditContact } from '../actions';\r\n\r\nfunction EditContactForm({ contact, updateContact, toggleEditContact }) {\r\n\tconst [updatedContact, setUpdatedContact] = useState({\r\n\t\tname: '',\r\n\t\tfirstLine: '',\r\n\t\tsecondLine: '',\r\n\t\ttown: '',\r\n\t\tcounty: '',\r\n\t\tpostcode: '',\r\n\t\temail: '',\r\n\t\tphone: '',\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tsetUpdatedContact(contact);\r\n\t}, [contact]);\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tsetUpdatedContact({ ...updatedContact, [name]: value });\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tupdateContact(updatedContact);\r\n\t\ttoggleEditContact({\r\n\t\t\ttype: 'TOGGLE_EDIT_CONTACT',\r\n\t\t\teditingContact: updatedContact,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleCancel = () => {\r\n\t\ttoggleEditContact({\r\n\t\t\ttype: 'TOGGLE_EDIT_CONTACT',\r\n\t\t\teditingContact: contact,\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit} className=\"form edit__contact\">\r\n\t\t\t<input\r\n\t\t\t\tvalue={updatedContact.name}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"name\"\r\n\t\t\t\tplaceholder=\"name\"\r\n\t\t\t\trequired\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\tvalue={updatedContact.firstLine}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"firstLine\"\r\n\t\t\t\tplaceholder=\"first line\"\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\tvalue={updatedContact.secondLine}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"secondLine\"\r\n\t\t\t\tplaceholder=\"second line\"\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\tvalue={updatedContact.town}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"town\"\r\n\t\t\t\tplaceholder=\"town\"\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\tvalue={updatedContact.county}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"county\"\r\n\t\t\t\tplaceholder=\"county\"\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\tvalue={updatedContact.postcode}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"postcode\"\r\n\t\t\t\tplaceholder=\"postcode\"\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\tvalue={updatedContact.email}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"email\"\r\n\t\t\t\tplaceholder=\"email\"\r\n\t\t\t\trequired\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\tvalue={updatedContact.phone}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"phone\"\r\n\t\t\t\tplaceholder=\"phone\"\r\n\t\t\t/>\r\n\t\t\t<div className=\"form__button_block\">\r\n\t\t\t\t<button type=\"submit\">Update</button>\r\n\t\t\t\t<button onClick={handleCancel}>Cancel</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default connect(null, { updateContact, toggleEditContact })(\r\n\tEditContactForm\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactCard from './ContactCard';\r\nimport EditContactForm from './EditContactForm'\r\n\r\nfunction ContactList({ contactList }) {\r\n\treturn (\r\n\t\t<div className=\"container contact__list\">\r\n\t\t\t{contactList.length > 0 ? (\r\n\t\t\t\tcontactList.map((contact, index) =>\r\n\t\t\t\t\tcontact.editing ? (\r\n\t\t\t\t\t\t<EditContactForm key={index} contact={contact} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<ContactCard key={index} contact={contact} />\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t) : (\r\n\t\t\t\t<p>No Contacts!</p>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcontactList: state.contactList,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\n\r\nfunction OpenFormButton({ setDisplayForm, displayForm }) {\r\n  const buttonText = displayForm ? `Close Form` : `Add New Contact`;\r\n\r\n  const handleClick = () => {\r\n    setDisplayForm((prevState) => !prevState);\r\n  };\r\n  return <button onClick={handleClick}>{buttonText}</button>;\r\n}\r\n\r\nexport default OpenFormButton;\r\n","import React, { useState } from 'react';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport OpenFormButton from './components/OpenFormButton';\r\nimport '../src/index.css';\r\n\r\nfunction App() {\r\n  const [displayForm, setDisplayForm] = useState(false);\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>Address Book</h1>\r\n      </header>\r\n      <main>\r\n        <OpenFormButton\r\n          displayForm={displayForm}\r\n          setDisplayForm={setDisplayForm}\r\n        />\r\n        {displayForm && <ContactForm />}\r\n\r\n        <ContactList />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}